services:
  # Service Discovery
  consul:
    image: consul:latest
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -ui -bootstrap-expect=1 -client=0.0.0.0
    networks:
      - staking-network

  # Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - staking-network

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      CONSUL_ADDR: http://consul:8500
      SERVICE_NAME: api-gateway
      LOG_LEVEL: debug
    depends_on:
      - consul
    networks:
      - staking-network

  # Ethereum Node Service
  ethereum-node:
    build:
      context: ./services/node-template
      dockerfile: Dockerfile
    container_name: ethereum-node
    ports:
      - "8081:8080"
    environment:
      SERVICE_NAME: ethereum-node
      CHAIN_NAME: ethereum
      PORT: 8080
      CONSUL_ADDR: http://consul:8500
      NODE_RPC_URL: https://eth-mainnet.g.alchemy.com/v2/demo
      LOG_LEVEL: debug
    depends_on:
      - consul
      - rabbitmq
    networks:
      - staking-network

  # Bitcoin Node Service
  bitcoin-node:
    build:
      context: ./services/node-template
      dockerfile: Dockerfile
    container_name: bitcoin-node
    ports:
      - "8082:8080"
    environment:
      SERVICE_NAME: bitcoin-node
      CHAIN_NAME: bitcoin
      PORT: 8080
      CONSUL_ADDR: http://consul:8500
      NODE_RPC_URL: http://localhost:8332
      LOG_LEVEL: debug
    depends_on:
      - consul
      - rabbitmq
    networks:
      - staking-network

  # Solana Node Service
  solana-node:
    build:
      context: ./services/node-template
      dockerfile: Dockerfile
    container_name: solana-node
    ports:
      - "8083:8080"
    environment:
      SERVICE_NAME: solana-node
      CHAIN_NAME: solana
      PORT: 8080
      CONSUL_ADDR: http://consul:8500
      NODE_RPC_URL: https://api.mainnet-beta.solana.com
      LOG_LEVEL: debug
    depends_on:
      - consul
      - rabbitmq
    networks:
      - staking-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-gateway
    networks:
      - staking-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - staking-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - staking-network

networks:
  staking-network:
    driver: bridge

volumes:
  rabbitmq-data:
  prometheus-data:
  grafana-data: